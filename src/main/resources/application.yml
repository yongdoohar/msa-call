server:
  port: 8080

---

spring:
  profiles: default
  # jpa:
  #   properties:
  #     hibernate:
  #       show_sql: true
  #       format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: call
          destination: callengineer
          contentType: application/json
        event-out:
          destination: callengineer
          contentType: application/json
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: test
    url: jdbc:mysql://localhost:3306/calldb?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    # generate-ddl: true
    show-sql: true
    hibernate:
      show_sql: true
      ormat_sql: true
      ddl-auto: create

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
server:
  port: 8081
---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: call
          destination: callengineer
          contentType: application/json
        event-out:
          destination: callengineer
          contentType: application/json
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug